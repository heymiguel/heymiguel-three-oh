.blink {
  animation: theBlink 1.5s linear infinite;
}

.blink-faster {
  animation: theBlink 1s linear infinite;
}

@keyframes theBlink {
  50% {
    opacity: 0;
  }
}


/* REGULAR SCANLINES SETTINGS */

// width of 1 scanline (min.: 1px)
$scan-width: 1px;
// emulates a damage-your-eyes bad pre-2000 CRT screen ♥ (true, false)
$scan-crt: true;
// frames-per-second (should be > 1), only applies if $scan-crt: true;
$scan-fps: 60;
// scanline-color (rgba)
$scan-color: rgba(#000, .3);
// set z-index on 8, like in ♥ 8-bits ♥, or…
// set z-index on 2147483648 or more to enable scanlines on Chrome fullscreen (doesn't work in Firefox or IE);
$scan-z-index: 2;

/* MOVING SCANLINE SETTINGS */

// moving scanline (true, false)
$scan-moving-line: true;
// opacity of the moving scanline
$scan-opacity: .75;

/* MIXINS */

// apply CRT animation: @include scan-crt($scan-crt);
@mixin scan-crt($scan-crt) {
  @if $scan-crt==true {
    animation: scanlines 3s steps($scan-fps) infinite;
  }
  @else {
    animation: none;
  }
}

// apply CRT animation: @include scan-crt($scan-crt);
@mixin scan-moving($scan-moving-line) {
  @if $scan-moving-line==true {
    animation: scanline 6s linear infinite;
  }
  @else {
    animation: none;
  }
}


/* CSS .scanlines CLASS */

.scanlines {
  position: relative;
  overflow: hidden; // only to animate the unique scanline
  &:before,
  &:after {
    display: block;
    pointer-events: none;
    content: '';
    position: absolute;
  }
  // unique scanline travelling on the screen
  &:before {
    // position: absolute;
    // bottom: 100%;
    width: 100%;
    height: $scan-width * 1;
    z-index: $scan-z-index + 1;
    background: $scan-color;
    opacity: $scan-opacity;
    z-index: 2;
    // animation: scanline 6s linear infinite;
    @include scan-moving($scan-moving-line);
  }
  // the scanlines, so!
  &:after {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: $scan-z-index;
    background: linear-gradient( to bottom, transparent 50%, $scan-color 51%);
    background-size: 100% $scan-width*2;
    @include scan-crt($scan-crt);
  }
}


/* ANIMATE UNIQUE SCANLINE */

@keyframes scanline {
  0% {
    transform: translate3d(0, 200000%, 0);
    // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }
  }
}

@keyframes scanlines {
  0% {
    background-position: 0 50%;
    // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }
  }
}

// scanline credit to mehdi
.glitch {
  position: relative;
  &:after {
    content: 'Miguel Bautista';
    color: white;
    font: inherit;
    text-align: left;
    width: 500px;
    left: 25px;
    height: 155px;
    top: 25px;
    position: absolute;
    animation: glitch 5s steps(100) infinite;
  }
}

$r: rgba(255, 0, 0, 1);
$g: rgba(0, 255, 0, 1);
$b: rgba(0, 0, 255, 1);
$px: 0;
$px2:0;
@mixin mini-glitch($c1, $c2, $coeff, $start, $end) {
  $interval: $end - $start;
  @for $i from $start through $end {
    #{$i * 1%} {
      @if $i < $start+($interval/2) {
        $px: $px + $coeff;
        $px2: -$px;
        text-shadow: #{$px}px 0 0 $c1,
        #{$px2}px 0 0 $c2;
      }
      @else {
        $px: $px - 1;
        $px2: -$px;
        text-shadow: #{$px}px 0 0 $c1,
        #{$px2}px 0 0 $c2;
      }
    }
  }
  $px: 0;
  $px2: 0;
}

@mixin big-glitch($c1, $c2, $distance, $start, $end) {
  @for $i from $start through $end {
    #{$i * 1%} {
      @if $i==$end {
        text-shadow: 0 0 0 $c1, 0 0 0 $c2;
      }
      @else {
        $px: $distance;
        $px2: -$px;
        text-shadow: #{$px}px 0 0 $c1,
        #{$px2}px 0 0 $c2;
      }
    }
  }
  $px: 0;
  $px2: 0;
}

@keyframes glitch {
  @include mini-glitch($r, $b, 1, 0, 10);
  @include mini-glitch($r, $g, 0.5, 11, 20);
  @include mini-glitch($b, $g, 0.7, 21, 40);
  @include big-glitch($b, $g, 50, 41, 42);
  @include mini-glitch($r, $g, 0.5, 43, 50);
  @include mini-glitch($r, $b, 1, 51, 60);
  @include big-glitch($r, $g, 30, 61, 62);
  @include mini-glitch($r, $b, 0.5, 63, 70);
  @include big-glitch($r, $b, 70, 71, 72);
  @include mini-glitch($r, $b, 1, 73, 80);
  @include mini-glitch($r, $g, 0.5, 81, 90);
  @include big-glitch($g, $b, 60, 91, 92);
  @include mini-glitch($b, $g, 0.7, 92, 100);
}